{"remainingRequest":"E:\\vue\\user-trajectory-reconstruction\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\user-trajectory-reconstruction\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue\\user-trajectory-reconstruction\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\user-trajectory-reconstruction\\src\\views\\MapContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\user-trajectory-reconstruction\\src\\views\\MapContainer.vue","mtime":1654002956992},{"path":"E:\\vue\\user-trajectory-reconstruction\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\user-trajectory-reconstruction\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\user-trajectory-reconstruction\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\user-trajectory-reconstruction\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MapContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home_div\">\n    <div class=\"btn_box\">\n      <!-- <el-button type=\"primary\" size=\"small\" round @click=\"removeMarkers\"\n        >Remove</el-button\n      > -->\n      <el-button type=\"success\" size=\"small\" round @click=\"addMarkers('Origin')\"\n        >Origin</el-button\n      >\n      <el-button type=\"info\" size=\"small\" round @click=\"addMarkers('Expected')\"\n        >Expected</el-button\n      >\n      <el-button type=\"warning\" size=\"small\" round @click=\"addMarkers('Result')\"\n        >Result</el-button\n      >\n      <el-button type=\"danger\" size=\"small\" round @click=\"getDispatchDetail\"\n        >绘制</el-button\n      >\n      <el-button type=\"warning\" size=\"small\" round @click=\"clear\"\n        >清除</el-button\n      >\n    </div>\n    <div class=\"btn_box\">\n      动画控制\n      <div>\n        <el-button type=\"primary\" size=\"small\" round @click=\"startAnimation()\"\n          >开始动画</el-button\n        >\n        <el-button type=\"primary\" size=\"small\" round @click=\"pauseAnimation()\"\n          >暂停动画</el-button\n        >\n        <el-button type=\"primary\" size=\"small\" round @click=\"resumeAnimation()\"\n          >继续动画</el-button\n        >\n        <el-button type=\"success\" size=\"small\" round @click=\"setcenter\"\n          >定位</el-button\n        >\n        <!-- <el-button type=\"primary\" size=\"small\" round @click=\"stopAnimation()\"\n          >停止动画</el-button\n        > -->\n      </div>\n      <!-- <el-button type=\"success\" @click=\"addinfo\">infoWindow</el-button> -->\n    </div>\n    <div id=\"container\"></div>\n    <div id=\"panel\"></div>\n  </div>\n</template>\n\n<script>\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nexport default {\n  name: \"Mapview\",\n  data() {\n    return {\n      map: null,\n      driving: null,\n      car: null,\n      polyline: null,\n      icon: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png\",\n      date: \"\",\n      time_id: \"\",\n      user_id: [],\n      origin: [],\n      expected: [],\n      result: [],\n      center: [116.407387, 39.904179],\n      points: [[116.407387, 39.904179]],\n      markList: [],\n      path: [], // 路径\n      start: null,\n      line: [],\n    };\n  },\n  created() {},\n  mounted() {\n    this.init();\n  },\n  methods: {\n    setcenter() {\n      var map = this.map;\n      // console.log(this.car);\n      console.log(this.car.getPosition());\n      map.setCenter(this.car.getPosition(), true);\n      // this.car.on(\"moving\", function (e) {\n      //   map.setCenter(e.target.getPosition(), true);\n      // });\n    },\n    addinfo() {\n      // 信息窗体的内容\n      var date =\n        this.date.slice(0, 4) +\n        \"年\" +\n        this.date.slice(4, 6) +\n        \"月\" +\n        this.date.slice(6, 8) +\n        \"日\";\n      var content = [\n        \"<div><div><b>用户ID: \" + this.user_id + \"</b>\",\n        \"日期：\" + date,\n        \"时间：</div></div>\",\n      ];\n\n      // 创建 infoWindow 实例\n      var infoWindow = new AMap.InfoWindow({\n        content: content.join(\"<br>\"), //传入 dom 对象，或者 html 字符串\n      });\n      var map = this.map;\n      // 打开信息窗体\n      infoWindow.open(map, map.getCenter());\n    },\n    // 经纬度驾车路线规划：https://lbs.amap.com/demo/jsapi-v2/example/driving-route/plan-route-according-to-lnglat\n    // 路径规划：https://lbs.amap.com/api/webservice/guide/api/direction#driving\n    // 信息窗体：https://blog.csdn.net/m0_37355951/article/details/77527686\n    // 动画：https://blog.csdn.net/weixin_45559135/article/details/110001139?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&utm_relevant_index=2\n    // 一些参考：https://blog.csdn.net/qq_44861015/article/details/122726609?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-4.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-4.pc_relevant_default&utm_relevant_index=9\n    // https://blog.csdn.net/annaihanyou65423/article/details/101672953\n    // https://blog.csdn.net/weixin_41618917/article/details/117258242?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-4.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-4.pc_relevant_antiscanv2&utm_relevant_index=5\n    // vue高德多条轨迹导航+带途径节点标注+各路线颜色区别：https://blog.csdn.net/qq_29101609/article/details/103597842?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_paycolumn_v3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_paycolumn_v3&utm_relevant_index=3\n    // vue高德单条(可批量)路线规划+单条(可批量)路线带途径节点marker+单条(可批量)路线分段渲染各颜色：https://blog.csdn.net/qq_29101609/article/details/106237837?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.pc_relevant_default&spm=1001.2101.3001.4242.1&utm_relevant_index=3\n\n    addCar(pos) {\n      // 根据pos添加小车\n      this.car = new AMap.Marker({\n        position: pos,\n        // icon: \"https://webapi.amap.com/images/car.png\",\n        icon: require(\"../assets/1.png\"),\n        offset: new AMap.Pixel(-12.5, -24),\n        angle: 90, //图片旋转角度\n      });\n      this.map.add(this.car);\n    },\n    clear() {\n      // 清除地图\n      var map = this.map;\n      map.clearMap();\n      // // 清除以前的行经路线\n      // if (this.driving) {\n      //   this.driving.clear();\n      // }\n    },\n    startAnimation() {\n      var map = this.map;\n      // map.setZoom(18)\n      console.log(\"path:\", this.path);\n      // var temp = this.path[0];\n      this.line = this.path[0];\n      for (let i = 1; i < this.path.length; i++) {\n        // temp = temp.concat(this.path[i]);\n        this.line = this.line.concat(this.path[i]);\n      }\n      //绘制经过的轨迹\n      var passedPolyline = new AMap.Polyline({\n        map: map,\n        strokeColor: \"#00FF00\", //线颜色\n        strokeOpacity: 0.9, //线透明度\n        showDir: true,\n        strokeWeight: 7, //线宽\n        lineJoin: \"round\",\n      });\n      this.car.on(\"moving\", (e) => {\n        passedPolyline.setPath(e.passedPath);\n        // map.setCenter(e.target.getPosition(), true);\n      });\n\n      console.log(\"line:\", this.line);\n      this.car.moveAlong(this.line, {\n        // 每一段的时长\n        // duration: 300, //可根据实际采集时间间隔设置\n        speed: 500,\n        autoRotation: true,\n        // JSAPI2.0 是否延道路自动设置角度在 moveAlong 里设置\n      });\n      this.pauseAnimation();\n      this.resumeAnimation();\n      this.pauseAnimation();\n      this.resumeAnimation();\n    },\n    pauseAnimation() {\n      //暂停动画\n      this.car.pauseMove();\n    },\n    resumeAnimation() {\n      // 继续动画\n      this.car.resumeMove();\n    },\n    stopAnimation() {\n      // 停止动画\n      this.car.stopMove();\n    },\n    Color() {\n      var r = Math.floor(Math.random() * 255);\n      var g = Math.floor(Math.random() * 255);\n      var b = Math.floor(Math.random() * 255);\n      return \"rgba(\" + r + \",\" + g + \",\" + b + \",0.8)\";\n    },\n    getDispatchDetail() {\n      const lineColor = \"#0000FF\";\n      // 可以随机线的颜色\n      this.driving = new AMap.Driving({\n        // 驾车路线规划策略，AMap.DrivingPolicy.LEAST_TIME是最快捷模式,还有其他几种方式见Api文档\n        policy: AMap.DrivingPolicy.LEAST_TIME,\n      });\n      // 目前使用原结果点进行测试\n      var data = this.expected.filter((data) => {\n        return data != \"\";\n      });\n      // var data = this.result.filter((data) => {\n      //   return data != \"\";\n      // });\n      // 设置起点\n      this.start = data[0];\n      this.addCar(this.start);\n      var map = this.map;\n      this.path = new Array(data.length - 1);\n      // console.log(\"length:\", this.path.length);\n      for (let i = 0; i < data.length - 1; i++) {\n        // ？？？解决this.driving.search的回调函数异步问题\n        this.drawMapLine(\n          data[i][0],\n          data[i][1],\n          data[i + 1][0],\n          data[i + 1][1],\n          map,\n          lineColor,\n          i\n        );\n      }\n      // map.setZoom(18);\n      map.setFitView();\n    },\n    // start_x:起点的横坐标,start_y：起点的纵坐标,end_x:终点的横坐标,end_y:终点的纵坐标,map:实例化map(this.map),color:随机线的颜色\n    // 绘制路径\n    drawMapLine(start_x, start_y, end_x, end_y, map, color, i) {\n      map.plugin(\"AMap.Driving\", () => {\n        var start_xy = new AMap.LngLat(start_x, start_y); //起点\n        var end_xy = new AMap.LngLat(end_x, end_y); // 终点\n        // 根据起终点经纬度规划驾车导航 路线\n        this.driving.search(start_xy, end_xy, (status, result) => {\n          // console.log(start_xy, end_xy);\n          if (status === \"complete\") {\n            if (result.routes && result.routes.length) {\n              // 绘制路线规划的第一条路线，也可以按需求绘制其它几条路线\n              var path = this.parseRouteToPath(result.routes[0]);\n              // this.driving.search的回调函数存在异步问题，用数组方式解决\n              this.path[i] = path;\n              this.routeLine = new AMap.Polyline({\n                map: map,\n                path: path,\n                showDir: true,\n                isOutline: true,\n                outlineColor: \"#ffeeee\",\n                borderWeight: 2,\n                strokeWeight: 6,\n                strokeColor: color,\n                lineJoin: \"round\",\n              });\n              // console.log(\"绘制驾车路线完成\");\n            }\n          } else {\n            console.log(\"获取驾车数据失败：\" + result);\n          }\n        });\n      });\n    },\n    // 计算各个拐点位置\n    parseRouteToPath(route) {\n      var path = [];\n      for (var i = 0, l = route.steps.length; i < l; i++) {\n        var step = route.steps[i];\n        for (var j = 0, n = step.path.length; j < n; j++) {\n          path.push(step.path[j]);\n        }\n      }\n      return path;\n    },\n    removeMarkers() {\n      // 去除现在的坐标点列表\n      console.log(this.markList);\n      this.map.remove(this.markList);\n      this.markList = [];\n    },\n    addMarkers(type) {\n      console.log(type);\n      // 根据类型添加点\n      if (type == \"Origin\") {\n        this.removeMarkers();\n        this.points = this.origin.filter((data) => {\n          return data != \"\";\n        });\n        // console.log(\"origin:\",this.points);\n        this.icon = require(\"../assets/black.png\");\n      } else if (type == \"Expected\") {\n        this.points = this.expected.filter((data) => {\n          return data != \"\";\n        });\n        // console.log(\"Expected:\",this.points);\n        this.icon = require(\"../assets/blue.png\");\n      } else if (type == \"Result\") {\n        this.points = this.result.filter((data) => {\n          return data != \"\";\n        });\n        // console.log(\"Result:\",this.points);\n        this.icon = require(\"../assets/red.png\");\n      }\n      this.markList = [];\n      for (let i = 0; i < this.points.length; i++) {\n        var marker = new AMap.Marker({\n          position: this.points[i],\n          offset: new AMap.Pixel(-16, -32),\n          icon: this.icon, // 添加 Icon 实例\n          label: {\n            content: i + \"position\",\n            direction: \"bottom\",\n          },\n        });\n        if (i == 0) {\n          marker.content = [\"起点\", [this.points[i]]];\n        } else if (i == this.points.length - 1) {\n          marker.content = [\"终点\", this.points[i]];\n        } else {\n          marker.content = [\"途径点\" + i, this.points[i]];\n        }\n        marker.on(\"click\", this.markerClick);\n        // marker.emit(\"click\",{target:marker})\n        this.markList.push(marker);\n      }\n      console.log(\"length:\", this.markList.length);\n      this.map.add(this.markList);\n    },\n    markerClick(e) {\n      // 信息窗体的内容\n      console.log(e.target.content);\n      console.log(e.target.content[1][0]);\n      var date =\n        this.date.slice(0, 4) +\n        \"年\" +\n        this.date.slice(4, 6) +\n        \"月\" +\n        this.date.slice(6, 8) +\n        \"日\";\n      var content;\n      if (e.target.content[0] == \"起点\") {\n        content = [\n          \"<b>\" + e.target.content[0] + \"</b>\",\n          \"<b>用户ID: \" + this.user_id + \"</b>\",\n          \"日期: \" + date,\n          \"经纬度: [\" + e.target.content[1].toFixed(2) + \"]\",\n          // \"时间：\",\n        ];\n      } else {\n        content = [\n          \"<b>\" + e.target.content[0] + \"</b>\",\n          \"<b>用户ID: \" + this.user_id + \"</b>\",\n          \"日期: \" + date,\n          \"经纬度: [\" +\n            e.target.content[1][0].toFixed(2) +\n            \",\" +\n            e.target.content[1][1].toFixed(2) +\n            \"]\",\n          // \"时间：\",\n        ];\n      }\n\n      // 创建 infoWindow 实例\n      var infoWindow = new AMap.InfoWindow({\n        content: content.join(\"<br>\"), //传入 dom 对象，或者 html 字符串\n      });\n      var map = this.map;\n      // 打开信息窗体\n      infoWindow.open(map, e.target.getPosition());\n    },\n    // 地图初始化\n    async init() {\n      // Load获得轨迹数据\n      let res = await this.$axios.get(\"/result.json\");\n      // // 选择的第16条数据\n      // this.date = res.data.date[15];\n      // this.time_id = res.data.time[15];\n      // this.user_id = res.data.user[15];\n      // this.origin = res.data.origin[15];\n      // this.expected = res.data.expected[15];\n      // this.result = res.data.result[15];\n      // 选择第一条数据做测试\n      this.date = res.data.date[0];\n      this.time_id = res.data.time[0];\n      this.user_id = res.data.user[0];\n      this.origin = res.data.origin[0].slice(0, 8);\n      this.expected = res.data.expected[0].slice(0, 8);\n      this.result = res.data.result[0].slice(0, 8);\n      // console.log(this.origin, this.expected, this.result);\n      AMapLoader.load({\n        key: \"ddd292c88aa1bad9c04891a47724f40a\", //设置您的key\n        version: \"2.0\",\n        // version:\"1.4.4\",\n        plugins: [\n          \"AMap.ToolBar\",\n          \"AMap.Driving\",\n          \"AMap.MoveAnimation\",\n          \"AMap.Scale\",\n          \"AMap.HawkEye\",\n          \"AMap.MapType\",\n          \"AMap.ControlBar\",\n        ],\n        AMapUI: {\n          version: \"1.1\",\n          plugins: [\"overlay/SimpleMarker\"],\n        },\n        Loca: {\n          version: \"2.0\",\n          // version:\"1.4.4\",\n        },\n      })\n        .then((AMap) => {\n          this.map = new AMap.Map(\"container\", {\n            viewMode: \"3D\",\n            zoom: 11.5,\n            // zooms: [2, 22],\n            center: this.center,\n          });\n          this.map.addControl(new AMap.Scale());\n          this.map.addControl(new AMap.ToolBar());\n          this.map.addControl(new AMap.HawkEye());\n          this.map.addControl(new AMap.MapType());\n          this.map.addControl(new AMap.ControlBar());\n\n          // 初始化点\n          for (let i = 0; i < this.points.length; i++) {\n            var marker = new AMap.Marker({\n              position: this.points[i],\n              label: {\n                content: \"初始点\",\n                direction: \"bottom\",\n              },\n            });\n            this.markList.push(marker);\n          }\n          // console.log(\"length:\", this.markList.length);\n          this.map.add(this.markList);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n};\n</script>\n\n<style  scoped>\n.home_div {\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  /* position: relative; */\n}\n#container {\n  margin: 10px;\n  width: 100% - 20px;\n  height: 100%;\n  /* position: absolute; */\n}\n.btn_box {\n  margin: 10px 0px 0px 10px;\n  /* padding: 10px; */\n}\n</style>"],"sourceRoot":"src/views"}]}