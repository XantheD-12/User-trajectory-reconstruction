{"remainingRequest":"E:\\vue\\JSAPI_Vue2\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\JSAPI_Vue2\\src\\views\\MapContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\JSAPI_Vue2\\src\\views\\MapContainer.vue","mtime":1651725402550},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MapContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home_div\">\n    <div class=\"map_title\">\n      <h3>示例</h3>\n    </div>\n    <div class=\"btn_box\">\n      <!-- <el-button type=\"primary\" size=\"small\" round>主要按钮</el-button> -->\n      <el-button type=\"primary\" size=\"small\" round @click=\"removeMarkers\"\n        >Remove</el-button\n      >\n      <el-button type=\"success\" size=\"small\" round @click=\"addMarkers('Origin')\"\n        >Origin</el-button\n      >\n      <el-button type=\"info\" size=\"small\" round @click=\"addMarkers('Expected')\"\n        >Expected</el-button\n      >\n      <el-button type=\"warning\" size=\"small\" round @click=\"addMarkers('Result')\"\n        >Result</el-button\n      >\n      <!-- <el-button type=\"danger\" size=\"small\" round @click=\"drive\"\n        >画图</el-button\n      > -->\n      <el-button type=\"danger\" size=\"small\" round @click=\"getDispatchDetail\"\n        >绘制</el-button\n      >\n      <!-- <button @click=\"test\">测试</button> -->\n    </div>\n    <div id=\"container\"></div>\n    <div id=\"panel\"></div>\n  </div>\n</template>\n\n<script>\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nexport default {\n  name: \"Mapview\",\n  data() {\n    return {\n      map: null,\n      driving: null,\n      routeLineList: [],\n      icon: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png\",\n      date: \"\",\n      time_id: \"\",\n      user_id: [],\n      origin: [],\n      expected: [],\n      result: [],\n      center: [116.407387, 39.904179],\n      points: [[116.407387, 39.904179]],\n      markList: [],\n    };\n  },\n  created() {},\n  mounted() {\n    this.init();\n  },\n  methods: {\n    // 经纬度驾车路线规划：https://lbs.amap.com/demo/jsapi-v2/example/driving-route/plan-route-according-to-lnglat\n    // 路径规划：https://lbs.amap.com/api/webservice/guide/api/direction#driving\n    drive() {\n      console.log(this.result);\n      console.log(this.result.length);\n      console.log(\n        this.result.filter((data) => {\n          return data != \"\";\n        })\n      );\n\n      // var map = this.map;\n      // map.plugin(\"AMap.DragRoute\", function () {\n      //   // path 是驾车导航的起、途径和终点，最多支持16个途经点\n      //   var path = [];\n\n      //   path.push([116.303843, 39.983412]);\n      //   path.push([116.321354, 39.896436]);\n      //   path.push([116.407012, 39.992093]);\n\n      //   var route = new AMap.DragRoute(map, path, AMap.DrivingPolicy.LEAST_FEE);\n      //   // 查询导航路径并开启拖拽导航\n      //   route.search();\n      // });\n      // console.log(this.map);\n      var map = this.map;\n      AMap.plugin(\"AMap.Driving\", function () {\n        var driving = new AMap.Driving({\n          // 驾车路线规划策略，AMap.DrivingPolicy.LEAST_TIME是最快捷模式\n          policy: AMap.DrivingPolicy.LEAST_TIME,\n          // map 指定将路线规划方案绘制到对应的AMap.Map对象上\n          map: map,\n          // panel 指定将结构化的路线详情数据显示的对应的DOM上，传入值需是DOM的ID\n          panel: \"panel\",\n        });\n\n        var startLngLat = [116.379028, 39.865042];\n        var endLngLat = [116.427281, 39.903719];\n\n        driving.search(startLngLat, endLngLat, function (status, result) {\n          // 未出错时，result即是对应的路线规划方案\n          console.log(status, result);\n        });\n      });\n    },\n    // 信息窗体：https://blog.csdn.net/m0_37355951/article/details/77527686\n\n    // 动画：https://blog.csdn.net/weixin_45559135/article/details/110001139?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&utm_relevant_index=2\n    // 一些参考：https://blog.csdn.net/qq_44861015/article/details/122726609?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-4.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-4.pc_relevant_default&utm_relevant_index=9\n    // https://blog.csdn.net/annaihanyou65423/article/details/101672953\n    // https://blog.csdn.net/weixin_41618917/article/details/117258242?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-4.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-4.pc_relevant_antiscanv2&utm_relevant_index=5\n    // vue高德多条轨迹导航+带途径节点标注+各路线颜色区别：https://blog.csdn.net/qq_29101609/article/details/103597842?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_paycolumn_v3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_paycolumn_v3&utm_relevant_index=3\n    // vue高德单条(可批量)路线规划+单条(可批量)路线带途径节点marker+单条(可批量)路线分段渲染各颜色：https://blog.csdn.net/qq_29101609/article/details/106237837?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.pc_relevant_default&spm=1001.2101.3001.4242.1&utm_relevant_index=3\n    getDispatchDetail() {\n      // 清除老的行经路线\n      // if (this.driving) {\n      //   this.driving.clear();\n      //   this.map.remove(this.routeLineList); // 因为我在创建的时候重置了线的样式， 也要删除routeLineList\n      // }\n      // this.loadingDispatchList = true;\n      const lineColor = \"rgba(0,0,205,0.8)\";\n      // const lineColor =\n      //   \"rgba(\" +\n      //   255 +\n      //   \",\" +\n      //   Math.floor(Math.random() * 255) +\n      //   \",\" +\n      //   Math.floor(Math.random() * 255) +\n      //   \",\" +\n      //   1 +\n      //   \")\"; // 随机线的颜色\n      // if (code === 1) {\n      //   const plan = data.plan || {};\n      //   plan.orderSets = data.orderSets || [];\n      // if (plan.waybill_order_list.length > 1) {\n      // 画 行经路线\n      this.driving = new AMap.Driving({\n        // 驾车路线规划策略，AMap.DrivingPolicy.LEAST_TIME是最快捷模式,还有其他几种方式见Api文档\n        policy: AMap.DrivingPolicy.LEAST_TIME,\n      });\n      var data = this.result.filter((data) => {\n        return data != \"\";\n      });\n      var map = this.map;\n      for (let i = 0; i < data.length - 1; i++) {\n        console.log(data[i][0], data[i][1], data[i + 1][0], data[i + 1][1]);\n\n        this.drawMapLine(\n          data[i][0],\n          data[i][1],\n          data[i + 1][0],\n          data[i + 1][1],\n          map,\n          lineColor\n        );\n      }\n      // this.loadingDispatchList = false;\n    },\n    // start_x:起点的横坐标；\n    // start_y：起点的纵坐标；\n    // end_x:终点的横坐标；\n    // end_y:终点的纵坐标；\n    // map:实例化map（this.map）\n    // color:随机线的颜色\n    // 绘制路径\n    drawMapLine(start_x, start_y, end_x, end_y, map, color) {\n      map.plugin(\"AMap.Driving\", () => {\n        var start_xy = new AMap.LngLat(start_x, start_y);\n        var end_xy = new AMap.LngLat(end_x, end_y);\n        // 根据起终点经纬度规划驾车导航 路线\n        this.driving.search(start_xy, end_xy, (status, result) => {\n          console.log(status, result);\n          if (status === \"complete\") {\n            if (result.routes && result.routes.length) {\n              // 绘制第一条路线，也可以按需求绘制其它几条路线\n              var path = this.parseRouteToPath(result.routes[0]);\n              var routeLine = new AMap.Polyline({\n                path: path,\n                isOutline: true,\n                outlineColor: \"#ffeeee\",\n                borderWeight: 2,\n                strokeWeight: 3,\n                strokeColor: color,\n                lineJoin: \"round\",\n              });\n              routeLine.setMap(map);\n              // 调整视野达到最佳显示区域\n              // map.setFitView([startMarker, endMarker, routeLine])\n              this.routeLineList.push(routeLine);\n              console.log(\"绘制驾车路线完成\");\n            }\n          } else {\n            console.log(\"获取驾车数据失败：\" + result);\n          }\n        });\n      });\n    },\n    // 计算各个拐点位置\n    parseRouteToPath(route) {\n      var path = [];\n      for (var i = 0, l = route.steps.length; i < l; i++) {\n        var step = route.steps[i];\n        for (var j = 0, n = step.path.length; j < n; j++) {\n          path.push(step.path[j]);\n        }\n      }\n      return path;\n    },\n\n    test() {\n      console.log(\"test\");\n      this.loadTrace();\n    },\n    loadTrace() {\n      var data = this.expected.filter((data) => {\n        return data != \"\";\n      });\n      console.log(data);\n      this.points = data;\n    },\n    removeMarkers() {\n      console.log(this.markList);\n      this.map.remove(this.markList);\n      this.markList = [];\n    },\n    addMarkers(type) {\n      console.log(type);\n      // 根据类型添加点\n      if (type == \"Origin\") {\n        this.removeMarkers();\n        this.points = this.origin.filter((data) => {\n          return data != \"\";\n        });\n        this.icon = require(\"../assets/black.png\");\n      } else if (type == \"Expected\") {\n        this.points = this.expected.filter((data) => {\n          return data != \"\";\n        });\n        this.icon = require(\"../assets/blue.png\");\n      } else if (type == \"Result\") {\n        this.points = this.result.filter((data) => {\n          return data != \"\";\n        });\n        this.icon = require(\"../assets/red.png\");\n      }\n      // } else {\n      //   console.log(\"first\");\n      // }\n      this.markList = [];\n      for (let i = 0; i < this.points.length; i++) {\n        var marker = new AMap.Marker({\n          position: this.points[i],\n          offset: new AMap.Pixel(-16, -32),\n          icon: this.icon, // 添加 Icon 实例\n          // icon: this.icon, // 添加 Icon 实例\n          label: {\n            content: i + \"position\",\n            direction: \"bottom\",\n          },\n        });\n        this.markList.push(marker);\n      }\n      console.log(\"length:\", this.markList.length);\n      this.map.add(this.markList);\n    },\n    async init() {\n      // 获得轨迹数据\n      let res = await this.$axios.get(\"/result.json\");\n      // 选择的第16条数据\n      this.date = res.data.date[15];\n      this.time_id = res.data.time[15];\n      this.user_id = res.data.user[15];\n      this.origin = res.data.origin[15];\n      this.expected = res.data.expected[15];\n      this.result = res.data.result[15];\n      // console.log(\"date:\", this.date);\n      // console.log(\"time_id:\", this.time_id);\n      // console.log(\"user_id:\", this.user_id);\n      // console.log(\"origin:\", this.origin);\n      // console.log(\"expected:\", this.expected);\n      // console.log(\"result:\", this.result);\n      AMapLoader.load({\n        key: \"ddd292c88aa1bad9c04891a47724f40a\", //设置您的key\n        version: \"2.0\",\n        plugins: [\"AMap.ToolBar\", \"AMap.Driving\"],\n        AMapUI: {\n          version: \"1.1\",\n          plugins: [\"overlay/SimpleMarker\"],\n        },\n        Loca: {\n          version: \"2.0\",\n        },\n      })\n        .then((AMap) => {\n          this.map = new AMap.Map(\"container\", {\n            viewMode: \"3D\",\n            zoom: 11.5,\n            // zooms: [2, 22],\n            center: this.center,\n          });\n          // 初始化点\n          for (let i = 0; i < this.points.length; i++) {\n            var marker = new AMap.Marker({\n              position: this.points[i],\n              label: {\n                content: \"初始点\",\n                direction: \"bottom\",\n              },\n            });\n            this.markList.push(marker);\n          }\n          console.log(\"length:\", this.markList.length);\n          this.map.add(this.markList);\n\n          // this.addMarkers();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n};\n</script>\n<style  scoped>\n.home_div {\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  /* position: relative; */\n}\n#container {\n  /* padding: 20px; */\n  margin: 10px;\n  width: 100% - 20px;\n  height: 100%;\n  /* position: absolute; */\n}\n.map_title {\n  /* position: absolute;\n  z-index: 1; */\n  width: 100%;\n  height: 50px;\n  background-color: rgba(27, 25, 27, 0.884);\n}\nh3 {\n  /* position: absolute; */\n  /* left: 10px; */\n  /* z-index: 2; */\n  color: white;\n}\nbtn_box {\n  margin: 10px;\n  padding: 10px;\n}\n</style>"],"sourceRoot":"src/views"}]}