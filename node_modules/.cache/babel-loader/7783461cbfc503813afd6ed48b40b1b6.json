{"remainingRequest":"E:\\vue\\JSAPI_Vue2\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\JSAPI_Vue2\\src\\view\\MapContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\JSAPI_Vue2\\src\\view\\MapContainer.vue","mtime":1651652137953},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MapContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home_div\">\n    <div class=\"map_title\">\n      <h3>示例</h3>\n    </div>\n    <div class=\"btn_box\">\n      <!-- <el-button type=\"primary\" size=\"small\" round>主要按钮</el-button> -->\n      <el-button type=\"primary\" size=\"small\" round @click=\"removeMarkers\"\n        >Remove</el-button\n      >\n      <el-button type=\"success\" size=\"small\" round @click=\"addMarkers('Origin')\"\n        >Origin</el-button\n      >\n      <el-button type=\"info\" size=\"small\" round @click=\"addMarkers('Expected')\"\n        >Expected</el-button\n      >\n      <el-button type=\"warning\" size=\"small\" round @click=\"addMarkers('Result')\"\n        >Result</el-button\n      >\n      <el-button type=\"danger\" size=\"small\" round>危险按钮</el-button>\n      <button @click=\"test\">测试</button>\n    </div>\n    <div id=\"container\"></div>\n  </div>\n</template>\n\n<script>\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nexport default {\n  name: \"Mapview\",\n  data() {\n    return {\n      map: null,\n      icon: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png\",\n      date: \"\",\n      time_id: \"\",\n      user_id: [],\n      origin: [],\n      expected: [],\n      result: [],\n      center: [116.407387, 39.904179],\n      points: [[116.407387, 39.904179]],\n      markList: [],\n    };\n  },\n  created() {},\n  mounted() {\n    this.init();\n  },\n  methods: {\n    test() {\n      console.log(\"test\");\n      this.loadTrace();\n    },\n    loadTrace() {\n      var data = this.expected.filter((data) => {\n        return data != \"\";\n      });\n      console.log(data);\n      this.points = data;\n    },\n    removeMarkers() {\n      console.log(this.markList);\n      this.map.remove(this.markList);\n      this.markList = [];\n    },\n    addMarkers(type) {\n      console.log(type);\n      // 根据类型添加点\n      if (type == \"Origin\") {\n        this.points = this.origin.filter((data) => {\n          return data != \"\";\n        });\n      } else if (type == \"Expected\") {\n        this.points = this.expected.filter((data) => {\n          return data != \"\";\n        });\n      } else if (type == \"Result\") {\n        this.points = this.result.filter((data) => {\n          return data != \"\";\n        });\n      } else {\n        console.log(\"first\");\n      }\n\n      // this.points = this.origin.filter((data) => {\n      //   return data != \"\";\n      // });\n      this.markList = [];\n      var t = require(\"../assets/re.svg\");\n      for (let i = 0; i < this.points.length; i++) {\n        var marker = new AMap.Marker({\n          position: this.points[i],\n          offset: new AMap.Pixel(-16, -32),\n          icon: t, // 添加 Icon 实例\n          // icon: this.icon, // 添加 Icon 实例\n          label: {\n            content: i + \"position\",\n            direction: \"bottom\",\n          },\n        });\n        this.markList.push(marker);\n      }\n      console.log(\"length:\", this.markList.length);\n      this.map.add(this.markList);\n    },\n    async init() {\n      // 获得轨迹数据\n      let res = await this.$axios.get(\"/result.json\");\n      this.date = res.data.date[15];\n      this.time_id = res.data.time[15];\n      this.user_id = res.data.user[15];\n      this.origin = res.data.origin[15];\n      this.expected = res.data.expected[15];\n      this.result = res.data.result[15];\n      // console.log(\"date:\", this.date);\n      // console.log(\"time_id:\", this.time_id);\n      // console.log(\"user_id:\", this.user_id);\n      // console.log(\"origin:\", this.origin);\n      // console.log(\"expected:\", this.expected);\n      // console.log(\"result:\", this.result);\n      AMapLoader.load({\n        key: \"ddd292c88aa1bad9c04891a47724f40a\", //设置您的key\n        version: \"2.0\",\n        plugins: [\"AMap.ToolBar\", \"AMap.Driving\"],\n        AMapUI: {\n          version: \"1.1\",\n          plugins: [\"overlay/SimpleMarker\"],\n        },\n        Loca: {\n          version: \"2.0\",\n        },\n      })\n        .then((AMap) => {\n          this.map = new AMap.Map(\"container\", {\n            viewMode: \"3D\",\n            zoom: 12,\n            // zooms: [2, 22],\n            center: this.center,\n          });\n          // var markList = [];\n          // for (let i = 0; i < this.points.length; i++) {\n          //   var marker = new AMap.Marker({\n          //     position: this.points[i],\n          //     offset: new AMap.Pixel(-9.5, -31),\n          //     icon: this.icon, // 添加 Icon 实例\n          //     label: {\n          //       content: i + \"position\",\n          //       direction: \"bottom\",\n          //     },\n          //   });\n          //   markList.push(marker);\n          // }\n          // console.log(\"length:\", markList.length);\n          // this.map.add(markList);\n\n          this.addMarkers();\n          // var marker = new AMap.Marker({\n          //   position: new AMap.LngLat(116.39, 39.9), // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]\n          //   title: \"北京\",\n          // });\n          //   var marker = new AMap.Marker({\n          //     position: new AMap.LngLat(116.39, 39.9),\n          //     offset: new AMap.Pixel(-10, -10),\n          //     icon: \"//vdata.amap.com/icons/b18/1/2.png\", // 添加 Icon 图标 URL\n          //     title: \"北京\",\n          //   });\n          // 创建 AMap.Icon 实例：\n          //   var icon = new AMap.Icon({\n          //     size: new AMap.Size(40, 50), // 图标尺寸\n          //     image: \"http://webapi.amap.com/images/marker_sprite.png\", // Icon的图像\n          //     imageOffset: new AMap.Pixel(0, -60), // 图像相对展示区域的偏移量，适于雪碧图等\n          //     imageSize: new AMap.Size(40, 50), // 根据所设置的大小拉伸或压缩图片\n          //   });\n\n          // 将 Icon 实例添加到 marker 上:\n\n          // var marker1 = new AMap.Marker({\n          //   position: new AMap.LngLat(116.39, 39.9),\n          //   offset: new AMap.Pixel(-9.5, -31),\n          //   icon: this.icon, // 添加 Icon 实例\n          //   title: \"北京\",\n          //   label: {\n          //     content: \"beijing\",\n          //     direction: \"bottom\",\n          //   },\n          //   // zoom: 13,\n          // });\n          // var marker2 = new AMap.Marker({\n          //   position: new AMap.LngLat(116.4, 39.9),\n          //   offset: new AMap.Pixel(-9.5, -31),\n          //   icon: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png\", // 添加 Icon 实例\n          //   title: \"北京\",\n          //   label: {\n          //     content: \"2\",\n          //     direction: \"bottom\",\n          //   },\n          //   // zoom: 13,\n          // });\n          // var marklist = [marker1, marker2];\n          // 将创建的点标记添加到已有的地图实例：\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n};\n</script>\n<style  scoped>\n.home_div {\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  /* position: relative; */\n}\n#container {\n  /* padding: 20px; */\n  margin: 10px;\n  width: 100% - 20px;\n  height: 100%;\n  /* position: absolute; */\n}\n.map_title {\n  /* position: absolute;\n  z-index: 1; */\n  width: 100%;\n  height: 50px;\n  background-color: rgba(27, 25, 27, 0.884);\n}\nh3 {\n  /* position: absolute; */\n  /* left: 10px; */\n  /* z-index: 2; */\n  color: white;\n}\nbtn_box {\n  margin: 10px;\n  padding: 10px;\n}\n</style>"],"sourceRoot":"src/view"}]}