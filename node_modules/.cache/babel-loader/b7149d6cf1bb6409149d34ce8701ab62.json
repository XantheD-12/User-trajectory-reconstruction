{"remainingRequest":"E:\\vue\\JSAPI_Vue2\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\JSAPI_Vue2\\src\\views\\Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\JSAPI_Vue2\\src\\views\\Test.vue","mtime":1652539987020},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Test.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <h1>This is a test.</h1>\r\n    <!-- 地图 -->\r\n    <div id=\"container\" style=\"width: 100%; height: 100%\"></div>\r\n    <!-- 触发按钮 -->\r\n    <div><a-button type=\"primary\" @click=\"carSearch\">搜索</a-button></div>\r\n    <!-- 轨迹回放控制 -->\r\n    <div class=\"controlBoxButton\">\r\n      <div @click=\"startAnimation()\">开始动画</div>\r\n      <div @click=\"pauseAnimation()\">暂停动画</div>\r\n      <div @click=\"resumeAnimation()\">继续动画</div>\r\n      <div @click=\"stopAnimation()\">停止动画</div>\r\n    </div>\r\n    <!-- 标点弹窗 -->\r\n    <!-- <div id=\"mapInfoWindow\">\r\n      <div>{{ siteData.name }}</div>\r\n      <div>累计停留时间：{{ siteData.time }}秒</div>\r\n      <div>{{ siteData.startDate }}{{ siteData.uploadTime }}</div>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      markerIcon: {\r\n        car: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png\",\r\n        // label: require(\"@/assets/label.png\"),\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    //map初始化\r\n    async initMap() {\r\n      let res = await this.$axios.get(\"/result.json\");\r\n      // 选择的第16条数据\r\n      this.date = res.data.date[15];\r\n      this.time_id = res.data.time[15];\r\n      this.user_id = res.data.user[15];\r\n      this.origin = res.data.origin[15];\r\n      this.expected = res.data.expected[15];\r\n      this.result = res.data.result[15];\r\n      AMapLoader.load({\r\n        key: \"ddd292c88aa1bad9c04891a47724f40a\", //设置您的key\r\n        version: \"2.0\",\r\n        plugins: [\"AMap.ToolBar\", \"AMap.Driving\", \"AMap.MoveAnimation\"],\r\n        AMapUI: {\r\n          version: \"1.1\",\r\n          plugins: [\"overlay/SimpleMarker\"],\r\n        },\r\n        Loca: {\r\n          version: \"2.0\",\r\n        },\r\n      })\r\n        .then((AMap) => {\r\n          this.map = new AMap.Map(\"container\", {\r\n            viewMode: \"3D\",\r\n            zoom: 13,\r\n            // zooms: [2, 22],\r\n            center: [119.761878, 29.126898],\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    //小车线路回放\r\n    carSearch() {\r\n      let that = this;\r\n      //处理接口返回数据格式 (格式为[[经度，纬度],[经度，纬度].......])\r\n      this.lineArr = [];\r\n      // // res为请求接口获得的线路数据;\r\n      // res.result.points.map((item) => {\r\n      //   this.lineArr.push([item.longitude, item.latitude]);\r\n      // });\r\n      //设置小车icon\r\n      let car = new AMap.Icon({\r\n        image: that.markerIcon.car, //自定义小车图形\r\n        size: new AMap.Size(140, 50), //图标大小\r\n        imageSize: new AMap.Size(80, 50), //图标所用图片大小\r\n        imageOffset: new AMap.Pixel(0, -10), //图标所用图片偏移量\r\n      });\r\n      //设置marker\r\n      let position = [\r\n        // res.result.points[0].longitude,\r\n        // res.result.points[0].latitude,\r\n      ];\r\n      this.marker = new AMap.Marker({\r\n        position: position, //小车开始时位置\r\n        icon: car,\r\n        autoRotation: true, //自动旋转\r\n        angle: -90, //旋转角度\r\n        map: that.map,\r\n      });\r\n      // 绘制轨迹\r\n      // let polyline = new AMap.Polyline({\r\n      //   map: that.map,\r\n      //   path: that.lineArr,\r\n      //   showDir: true, //显示折线箭头\r\n      //   strokeColor: \"#557aa6\", //线颜色\r\n      //   // strokeOpacity: 1, //线透明度\r\n      //   strokeWeight: 6, //线宽\r\n      //   // strokeStyle: \"solid\"  //线样式\r\n      // });\r\n      // let passedPolyline = new AMap.Polyline({\r\n      //   map: that.map,\r\n      //   strokeColor: \"#AF5\",\r\n      //   // strokeOpacity: 1, //线透明度\r\n      //   strokeWeight: 6,\r\n      //   // strokeStyle: \"solid\"  //线样式\r\n      // });\r\n      // this.marker.on(\"moving\", function (e) {\r\n      //   passedPolyline.setPath(e.passedPath);\r\n      //   // that.map.setCenter(e.target.getPosition(),true) //设置后地图跟随小车移动\r\n      // });\r\n      // this.initCarSite(); //配置线路中的标点位置\r\n      // //调整合适位置\r\n      // this.map.setFitView();\r\n    },\r\n    //配置线路中的标点\r\n    // initCarSite() {\r\n    //   let that = this;\r\n    //   //res为请求接口获得的站点数据\r\n    //   res.result.slowPoints.map((item) => {\r\n    //     let icon = new AMap.Icon({\r\n    //       image: that.markerIcon.label,\r\n    //       size: new AMap.Size(80, 80),\r\n    //       imageSize: new AMap.Size(40, 40),\r\n    //       imageOffset: new AMap.Pixel(-10, 10),\r\n    //     });\r\n    //     let marker = new AMap.Marker({\r\n    //       icon: icon,\r\n    //       position: [item.longitude, item.latitude],\r\n    //     });\r\n    //     that.map.add(marker);\r\n    //     //设置信息弹窗\r\n    //     marker.siteData = item;\r\n    //     AMap.event.addListener(marker, \"click\", function () {\r\n    //       that.openInfoWindow(marker);\r\n    //     });\r\n    //   });\r\n    // },\r\n    //配置信息窗口\r\n    openInfoWindow(marker) {\r\n      let that = this;\r\n      that.siteData = marker.siteData;\r\n      let content = document.getElementById(\"mapInfoWindow\");\r\n      let infoWindow = new AMap.InfoWindow({\r\n        content: content,\r\n        offset: new AMap.Pixel(0, 0),\r\n      });\r\n      infoWindow.on(\"close\");\r\n      infoWindow.open(that.map, marker.getPosition());\r\n    },\r\n    //控制小车的一些事件\r\n    startAnimation() {\r\n      this.marker.moveAlong(this.lineArr, 800); //开始动画(800为速度)\r\n    },\r\n    pauseAnimation() {\r\n      this.marker.pauseMove(); //暂停动画\r\n    },\r\n    resumeAnimation() {\r\n      this.marker.resumeMove(); //继续动画\r\n    },\r\n    stopAnimation() {\r\n      this.marker.stopMove(); //停止动画\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views"}]}