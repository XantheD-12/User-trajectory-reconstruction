{"remainingRequest":"E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\JSAPI_Vue2\\src\\views\\Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\JSAPI_Vue2\\src\\views\\Test.vue","mtime":1652539987020},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\JSAPI_Vue2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQU1hcExvYWRlciBmcm9tICJAYW1hcC9hbWFwLWpzYXBpLWxvYWRlciI7DQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIG1hcmtlckljb246IHsNCiAgICAgICAgY2FyOiAiaHR0cDovL3dlYmFwaS5hbWFwLmNvbS90aGVtZS92MS4zL21hcmtlcnMvbi9tYXJrX3IucG5nIiwNCiAgICAgICAgLy8gbGFiZWw6IHJlcXVpcmUoIkAvYXNzZXRzL2xhYmVsLnBuZyIpLA0KICAgICAgfSwNCiAgICB9Ow0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuaW5pdE1hcCgpOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLy9tYXDliJ3lp4vljJYNCiAgICBhc3luYyBpbml0TWFwKCkgew0KICAgICAgbGV0IHJlcyA9IGF3YWl0IHRoaXMuJGF4aW9zLmdldCgiL3Jlc3VsdC5qc29uIik7DQogICAgICAvLyDpgInmi6nnmoTnrKwxNuadoeaVsOaNrg0KICAgICAgdGhpcy5kYXRlID0gcmVzLmRhdGEuZGF0ZVsxNV07DQogICAgICB0aGlzLnRpbWVfaWQgPSByZXMuZGF0YS50aW1lWzE1XTsNCiAgICAgIHRoaXMudXNlcl9pZCA9IHJlcy5kYXRhLnVzZXJbMTVdOw0KICAgICAgdGhpcy5vcmlnaW4gPSByZXMuZGF0YS5vcmlnaW5bMTVdOw0KICAgICAgdGhpcy5leHBlY3RlZCA9IHJlcy5kYXRhLmV4cGVjdGVkWzE1XTsNCiAgICAgIHRoaXMucmVzdWx0ID0gcmVzLmRhdGEucmVzdWx0WzE1XTsNCiAgICAgIEFNYXBMb2FkZXIubG9hZCh7DQogICAgICAgIGtleTogImRkZDI5MmM4OGFhMWJhZDljMDQ4OTFhNDc3MjRmNDBhIiwgLy/orr7nva7mgqjnmoRrZXkNCiAgICAgICAgdmVyc2lvbjogIjIuMCIsDQogICAgICAgIHBsdWdpbnM6IFsiQU1hcC5Ub29sQmFyIiwgIkFNYXAuRHJpdmluZyIsICJBTWFwLk1vdmVBbmltYXRpb24iXSwNCiAgICAgICAgQU1hcFVJOiB7DQogICAgICAgICAgdmVyc2lvbjogIjEuMSIsDQogICAgICAgICAgcGx1Z2luczogWyJvdmVybGF5L1NpbXBsZU1hcmtlciJdLA0KICAgICAgICB9LA0KICAgICAgICBMb2NhOiB7DQogICAgICAgICAgdmVyc2lvbjogIjIuMCIsDQogICAgICAgIH0sDQogICAgICB9KQ0KICAgICAgICAudGhlbigoQU1hcCkgPT4gew0KICAgICAgICAgIHRoaXMubWFwID0gbmV3IEFNYXAuTWFwKCJjb250YWluZXIiLCB7DQogICAgICAgICAgICB2aWV3TW9kZTogIjNEIiwNCiAgICAgICAgICAgIHpvb206IDEzLA0KICAgICAgICAgICAgLy8gem9vbXM6IFsyLCAyMl0sDQogICAgICAgICAgICBjZW50ZXI6IFsxMTkuNzYxODc4LCAyOS4xMjY4OThdLA0KICAgICAgICAgIH0pOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKGUpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICAvL+Wwj+i9pue6v+i3r+WbnuaUvg0KICAgIGNhclNlYXJjaCgpIHsNCiAgICAgIGxldCB0aGF0ID0gdGhpczsNCiAgICAgIC8v5aSE55CG5o6l5Y+j6L+U5Zue5pWw5o2u5qC85byPICjmoLzlvI/kuLpbW+e7j+W6pu+8jOe6rOW6pl0sW+e7j+W6pu+8jOe6rOW6pl0uLi4uLi4uXSkNCiAgICAgIHRoaXMubGluZUFyciA9IFtdOw0KICAgICAgLy8gLy8gcmVz5Li66K+35rGC5o6l5Y+j6I635b6X55qE57q/6Lev5pWw5o2uOw0KICAgICAgLy8gcmVzLnJlc3VsdC5wb2ludHMubWFwKChpdGVtKSA9PiB7DQogICAgICAvLyAgIHRoaXMubGluZUFyci5wdXNoKFtpdGVtLmxvbmdpdHVkZSwgaXRlbS5sYXRpdHVkZV0pOw0KICAgICAgLy8gfSk7DQogICAgICAvL+iuvue9ruWwj+i9pmljb24NCiAgICAgIGxldCBjYXIgPSBuZXcgQU1hcC5JY29uKHsNCiAgICAgICAgaW1hZ2U6IHRoYXQubWFya2VySWNvbi5jYXIsIC8v6Ieq5a6a5LmJ5bCP6L2m5Zu+5b2iDQogICAgICAgIHNpemU6IG5ldyBBTWFwLlNpemUoMTQwLCA1MCksIC8v5Zu+5qCH5aSn5bCPDQogICAgICAgIGltYWdlU2l6ZTogbmV3IEFNYXAuU2l6ZSg4MCwgNTApLCAvL+Wbvuagh+aJgOeUqOWbvueJh+Wkp+Wwjw0KICAgICAgICBpbWFnZU9mZnNldDogbmV3IEFNYXAuUGl4ZWwoMCwgLTEwKSwgLy/lm77moIfmiYDnlKjlm77niYflgY/np7vph48NCiAgICAgIH0pOw0KICAgICAgLy/orr7nva5tYXJrZXINCiAgICAgIGxldCBwb3NpdGlvbiA9IFsNCiAgICAgICAgLy8gcmVzLnJlc3VsdC5wb2ludHNbMF0ubG9uZ2l0dWRlLA0KICAgICAgICAvLyByZXMucmVzdWx0LnBvaW50c1swXS5sYXRpdHVkZSwNCiAgICAgIF07DQogICAgICB0aGlzLm1hcmtlciA9IG5ldyBBTWFwLk1hcmtlcih7DQogICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbiwgLy/lsI/ovablvIDlp4vml7bkvY3nva4NCiAgICAgICAgaWNvbjogY2FyLA0KICAgICAgICBhdXRvUm90YXRpb246IHRydWUsIC8v6Ieq5Yqo5peL6L2sDQogICAgICAgIGFuZ2xlOiAtOTAsIC8v5peL6L2s6KeS5bqmDQogICAgICAgIG1hcDogdGhhdC5tYXAsDQogICAgICB9KTsNCiAgICAgIC8vIOe7mOWItui9qOi/uQ0KICAgICAgLy8gbGV0IHBvbHlsaW5lID0gbmV3IEFNYXAuUG9seWxpbmUoew0KICAgICAgLy8gICBtYXA6IHRoYXQubWFwLA0KICAgICAgLy8gICBwYXRoOiB0aGF0LmxpbmVBcnIsDQogICAgICAvLyAgIHNob3dEaXI6IHRydWUsIC8v5pi+56S65oqY57q/566t5aS0DQogICAgICAvLyAgIHN0cm9rZUNvbG9yOiAiIzU1N2FhNiIsIC8v57q/6aKc6ImyDQogICAgICAvLyAgIC8vIHN0cm9rZU9wYWNpdHk6IDEsIC8v57q/6YCP5piO5bqmDQogICAgICAvLyAgIHN0cm9rZVdlaWdodDogNiwgLy/nur/lrr0NCiAgICAgIC8vICAgLy8gc3Ryb2tlU3R5bGU6ICJzb2xpZCIgIC8v57q/5qC35byPDQogICAgICAvLyB9KTsNCiAgICAgIC8vIGxldCBwYXNzZWRQb2x5bGluZSA9IG5ldyBBTWFwLlBvbHlsaW5lKHsNCiAgICAgIC8vICAgbWFwOiB0aGF0Lm1hcCwNCiAgICAgIC8vICAgc3Ryb2tlQ29sb3I6ICIjQUY1IiwNCiAgICAgIC8vICAgLy8gc3Ryb2tlT3BhY2l0eTogMSwgLy/nur/pgI/mmI7luqYNCiAgICAgIC8vICAgc3Ryb2tlV2VpZ2h0OiA2LA0KICAgICAgLy8gICAvLyBzdHJva2VTdHlsZTogInNvbGlkIiAgLy/nur/moLflvI8NCiAgICAgIC8vIH0pOw0KICAgICAgLy8gdGhpcy5tYXJrZXIub24oIm1vdmluZyIsIGZ1bmN0aW9uIChlKSB7DQogICAgICAvLyAgIHBhc3NlZFBvbHlsaW5lLnNldFBhdGgoZS5wYXNzZWRQYXRoKTsNCiAgICAgIC8vICAgLy8gdGhhdC5tYXAuc2V0Q2VudGVyKGUudGFyZ2V0LmdldFBvc2l0aW9uKCksdHJ1ZSkgLy/orr7nva7lkI7lnLDlm77ot5/pmo/lsI/ovabnp7vliqgNCiAgICAgIC8vIH0pOw0KICAgICAgLy8gdGhpcy5pbml0Q2FyU2l0ZSgpOyAvL+mFjee9rue6v+i3r+S4reeahOagh+eCueS9jee9rg0KICAgICAgLy8gLy/osIPmlbTlkIjpgILkvY3nva4NCiAgICAgIC8vIHRoaXMubWFwLnNldEZpdFZpZXcoKTsNCiAgICB9LA0KICAgIC8v6YWN572u57q/6Lev5Lit55qE5qCH54K5DQogICAgLy8gaW5pdENhclNpdGUoKSB7DQogICAgLy8gICBsZXQgdGhhdCA9IHRoaXM7DQogICAgLy8gICAvL3Jlc+S4uuivt+axguaOpeWPo+iOt+W+l+eahOermeeCueaVsOaNrg0KICAgIC8vICAgcmVzLnJlc3VsdC5zbG93UG9pbnRzLm1hcCgoaXRlbSkgPT4gew0KICAgIC8vICAgICBsZXQgaWNvbiA9IG5ldyBBTWFwLkljb24oew0KICAgIC8vICAgICAgIGltYWdlOiB0aGF0Lm1hcmtlckljb24ubGFiZWwsDQogICAgLy8gICAgICAgc2l6ZTogbmV3IEFNYXAuU2l6ZSg4MCwgODApLA0KICAgIC8vICAgICAgIGltYWdlU2l6ZTogbmV3IEFNYXAuU2l6ZSg0MCwgNDApLA0KICAgIC8vICAgICAgIGltYWdlT2Zmc2V0OiBuZXcgQU1hcC5QaXhlbCgtMTAsIDEwKSwNCiAgICAvLyAgICAgfSk7DQogICAgLy8gICAgIGxldCBtYXJrZXIgPSBuZXcgQU1hcC5NYXJrZXIoew0KICAgIC8vICAgICAgIGljb246IGljb24sDQogICAgLy8gICAgICAgcG9zaXRpb246IFtpdGVtLmxvbmdpdHVkZSwgaXRlbS5sYXRpdHVkZV0sDQogICAgLy8gICAgIH0pOw0KICAgIC8vICAgICB0aGF0Lm1hcC5hZGQobWFya2VyKTsNCiAgICAvLyAgICAgLy/orr7nva7kv6Hmga/lvLnnqpcNCiAgICAvLyAgICAgbWFya2VyLnNpdGVEYXRhID0gaXRlbTsNCiAgICAvLyAgICAgQU1hcC5ldmVudC5hZGRMaXN0ZW5lcihtYXJrZXIsICJjbGljayIsIGZ1bmN0aW9uICgpIHsNCiAgICAvLyAgICAgICB0aGF0Lm9wZW5JbmZvV2luZG93KG1hcmtlcik7DQogICAgLy8gICAgIH0pOw0KICAgIC8vICAgfSk7DQogICAgLy8gfSwNCiAgICAvL+mFjee9ruS/oeaBr+eql+WPow0KICAgIG9wZW5JbmZvV2luZG93KG1hcmtlcikgew0KICAgICAgbGV0IHRoYXQgPSB0aGlzOw0KICAgICAgdGhhdC5zaXRlRGF0YSA9IG1hcmtlci5zaXRlRGF0YTsNCiAgICAgIGxldCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1hcEluZm9XaW5kb3ciKTsNCiAgICAgIGxldCBpbmZvV2luZG93ID0gbmV3IEFNYXAuSW5mb1dpbmRvdyh7DQogICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQsDQogICAgICAgIG9mZnNldDogbmV3IEFNYXAuUGl4ZWwoMCwgMCksDQogICAgICB9KTsNCiAgICAgIGluZm9XaW5kb3cub24oImNsb3NlIik7DQogICAgICBpbmZvV2luZG93Lm9wZW4odGhhdC5tYXAsIG1hcmtlci5nZXRQb3NpdGlvbigpKTsNCiAgICB9LA0KICAgIC8v5o6n5Yi25bCP6L2m55qE5LiA5Lqb5LqL5Lu2DQogICAgc3RhcnRBbmltYXRpb24oKSB7DQogICAgICB0aGlzLm1hcmtlci5tb3ZlQWxvbmcodGhpcy5saW5lQXJyLCA4MDApOyAvL+W8gOWni+WKqOeUuyg4MDDkuLrpgJ/luqYpDQogICAgfSwNCiAgICBwYXVzZUFuaW1hdGlvbigpIHsNCiAgICAgIHRoaXMubWFya2VyLnBhdXNlTW92ZSgpOyAvL+aaguWBnOWKqOeUuw0KICAgIH0sDQogICAgcmVzdW1lQW5pbWF0aW9uKCkgew0KICAgICAgdGhpcy5tYXJrZXIucmVzdW1lTW92ZSgpOyAvL+e7p+e7reWKqOeUuw0KICAgIH0sDQogICAgc3RvcEFuaW1hdGlvbigpIHsNCiAgICAgIHRoaXMubWFya2VyLnN0b3BNb3ZlKCk7IC8v5YGc5q2i5Yqo55S7DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["Test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Test.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <h1>This is a test.</h1>\r\n    <!-- 地图 -->\r\n    <div id=\"container\" style=\"width: 100%; height: 100%\"></div>\r\n    <!-- 触发按钮 -->\r\n    <div><a-button type=\"primary\" @click=\"carSearch\">搜索</a-button></div>\r\n    <!-- 轨迹回放控制 -->\r\n    <div class=\"controlBoxButton\">\r\n      <div @click=\"startAnimation()\">开始动画</div>\r\n      <div @click=\"pauseAnimation()\">暂停动画</div>\r\n      <div @click=\"resumeAnimation()\">继续动画</div>\r\n      <div @click=\"stopAnimation()\">停止动画</div>\r\n    </div>\r\n    <!-- 标点弹窗 -->\r\n    <!-- <div id=\"mapInfoWindow\">\r\n      <div>{{ siteData.name }}</div>\r\n      <div>累计停留时间：{{ siteData.time }}秒</div>\r\n      <div>{{ siteData.startDate }}{{ siteData.uploadTime }}</div>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      markerIcon: {\r\n        car: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png\",\r\n        // label: require(\"@/assets/label.png\"),\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    //map初始化\r\n    async initMap() {\r\n      let res = await this.$axios.get(\"/result.json\");\r\n      // 选择的第16条数据\r\n      this.date = res.data.date[15];\r\n      this.time_id = res.data.time[15];\r\n      this.user_id = res.data.user[15];\r\n      this.origin = res.data.origin[15];\r\n      this.expected = res.data.expected[15];\r\n      this.result = res.data.result[15];\r\n      AMapLoader.load({\r\n        key: \"ddd292c88aa1bad9c04891a47724f40a\", //设置您的key\r\n        version: \"2.0\",\r\n        plugins: [\"AMap.ToolBar\", \"AMap.Driving\", \"AMap.MoveAnimation\"],\r\n        AMapUI: {\r\n          version: \"1.1\",\r\n          plugins: [\"overlay/SimpleMarker\"],\r\n        },\r\n        Loca: {\r\n          version: \"2.0\",\r\n        },\r\n      })\r\n        .then((AMap) => {\r\n          this.map = new AMap.Map(\"container\", {\r\n            viewMode: \"3D\",\r\n            zoom: 13,\r\n            // zooms: [2, 22],\r\n            center: [119.761878, 29.126898],\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    //小车线路回放\r\n    carSearch() {\r\n      let that = this;\r\n      //处理接口返回数据格式 (格式为[[经度，纬度],[经度，纬度].......])\r\n      this.lineArr = [];\r\n      // // res为请求接口获得的线路数据;\r\n      // res.result.points.map((item) => {\r\n      //   this.lineArr.push([item.longitude, item.latitude]);\r\n      // });\r\n      //设置小车icon\r\n      let car = new AMap.Icon({\r\n        image: that.markerIcon.car, //自定义小车图形\r\n        size: new AMap.Size(140, 50), //图标大小\r\n        imageSize: new AMap.Size(80, 50), //图标所用图片大小\r\n        imageOffset: new AMap.Pixel(0, -10), //图标所用图片偏移量\r\n      });\r\n      //设置marker\r\n      let position = [\r\n        // res.result.points[0].longitude,\r\n        // res.result.points[0].latitude,\r\n      ];\r\n      this.marker = new AMap.Marker({\r\n        position: position, //小车开始时位置\r\n        icon: car,\r\n        autoRotation: true, //自动旋转\r\n        angle: -90, //旋转角度\r\n        map: that.map,\r\n      });\r\n      // 绘制轨迹\r\n      // let polyline = new AMap.Polyline({\r\n      //   map: that.map,\r\n      //   path: that.lineArr,\r\n      //   showDir: true, //显示折线箭头\r\n      //   strokeColor: \"#557aa6\", //线颜色\r\n      //   // strokeOpacity: 1, //线透明度\r\n      //   strokeWeight: 6, //线宽\r\n      //   // strokeStyle: \"solid\"  //线样式\r\n      // });\r\n      // let passedPolyline = new AMap.Polyline({\r\n      //   map: that.map,\r\n      //   strokeColor: \"#AF5\",\r\n      //   // strokeOpacity: 1, //线透明度\r\n      //   strokeWeight: 6,\r\n      //   // strokeStyle: \"solid\"  //线样式\r\n      // });\r\n      // this.marker.on(\"moving\", function (e) {\r\n      //   passedPolyline.setPath(e.passedPath);\r\n      //   // that.map.setCenter(e.target.getPosition(),true) //设置后地图跟随小车移动\r\n      // });\r\n      // this.initCarSite(); //配置线路中的标点位置\r\n      // //调整合适位置\r\n      // this.map.setFitView();\r\n    },\r\n    //配置线路中的标点\r\n    // initCarSite() {\r\n    //   let that = this;\r\n    //   //res为请求接口获得的站点数据\r\n    //   res.result.slowPoints.map((item) => {\r\n    //     let icon = new AMap.Icon({\r\n    //       image: that.markerIcon.label,\r\n    //       size: new AMap.Size(80, 80),\r\n    //       imageSize: new AMap.Size(40, 40),\r\n    //       imageOffset: new AMap.Pixel(-10, 10),\r\n    //     });\r\n    //     let marker = new AMap.Marker({\r\n    //       icon: icon,\r\n    //       position: [item.longitude, item.latitude],\r\n    //     });\r\n    //     that.map.add(marker);\r\n    //     //设置信息弹窗\r\n    //     marker.siteData = item;\r\n    //     AMap.event.addListener(marker, \"click\", function () {\r\n    //       that.openInfoWindow(marker);\r\n    //     });\r\n    //   });\r\n    // },\r\n    //配置信息窗口\r\n    openInfoWindow(marker) {\r\n      let that = this;\r\n      that.siteData = marker.siteData;\r\n      let content = document.getElementById(\"mapInfoWindow\");\r\n      let infoWindow = new AMap.InfoWindow({\r\n        content: content,\r\n        offset: new AMap.Pixel(0, 0),\r\n      });\r\n      infoWindow.on(\"close\");\r\n      infoWindow.open(that.map, marker.getPosition());\r\n    },\r\n    //控制小车的一些事件\r\n    startAnimation() {\r\n      this.marker.moveAlong(this.lineArr, 800); //开始动画(800为速度)\r\n    },\r\n    pauseAnimation() {\r\n      this.marker.pauseMove(); //暂停动画\r\n    },\r\n    resumeAnimation() {\r\n      this.marker.resumeMove(); //继续动画\r\n    },\r\n    stopAnimation() {\r\n      this.marker.stopMove(); //停止动画\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}